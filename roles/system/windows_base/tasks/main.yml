---
- name: Rename user
  ansible.windows.win_powershell:
    script: |
      $currentUsername = "{{ item.current_username }}"
      $newUsername = "{{ item.new_username }}"

      $currentUser = Get-LocalUser -Name $currentUsername -ErrorAction SilentlyContinue
      $newUser = Get-LocalUser -Name $newUsername -ErrorAction SilentlyContinue

      if ($currentUser -ne $null -and $newUser -eq $null) {
        Write-Output "renamed"
      }
      else {
        Write-Output "not renamed"
      }
  register: rename_result
  changed_when: rename_result.output[0] == "renamed"
  loop: "{{ users_to_rename }}"
  notify: Reboot Windows

- name: Rename profile folder on disk
  ansible.windows.win_powershell:
    script: |
      $username = "{{ item.new_username }}"
      $sid = (Get-LocalUser -Name $username).Sid.Value
      $profKey = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\$sid"
      $profilePath = (Get-ItemProperty -Path $profKey).ProfileImagePath
      $newProfilePath = "{{ users_root }}\\{{ $username }}"

      if ($profilePath -ne $newProfilePath) {
        Write-Output "renamed"
      }
      else {
        Write-Output "not renamed"
      }
  register: profile_folder_rename_result
  changed_when: rename_result.output[0] == "renamed"
  loop: "{{ users_to_rename }}"
  notify: Reboot Windows

- name: Update registry ProfileImagePath
  ansible.windows.win_regedit:
    path: "HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\{{ target_sid }}"
    name: "ProfileImagePath"
    data: "{{ new_profile_path }}"
    type: string
  notify: Reboot Windows
  loop: "{{ users_to_rename }}"

# - name: Fix ACLs on new profile folder
#   ansible.windows.win_powershell:
#     script: |
#       $path = "{{ new_profile_path }}"
#       $user = "{{ new_username }}"
#       & takeown.exe /F $path /R /D Y | Out-Null
#       icacls $path /grant:r "$env:COMPUTERNAME\$user:(OI)(CI)(F)" /T | Out-Null

- name: Flush handlers
  ansible.builtin.meta: flush_handlers